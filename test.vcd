$date
	Mon May 16 02:31:43 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module cpu $end
$var reg 1 ! clk $end
$upscope $end
$scope module cpu $end
$var reg 16 " instruction [15:0] $end
$upscope $end
$scope module cpu $end
$var wire 8 # tmp_alu [7:0] $end
$upscope $end
$scope module cpu $end
$var reg 8 $ \Rx[0] [7:0] $end
$upscope $end
$scope module cpu $end
$var reg 8 % \Rx[1] [7:0] $end
$upscope $end
$scope module cpu $end
$var reg 8 & \Rx[2] [7:0] $end
$upscope $end
$scope module cpu $end
$var reg 8 ' \Rx[3] [7:0] $end
$upscope $end
$scope module cpu $end
$var reg 8 ( \Rx[4] [7:0] $end
$upscope $end
$scope module cpu $end
$var reg 8 ) \Rx[5] [7:0] $end
$upscope $end
$scope module cpu $end
$var reg 8 * \Rx[6] [7:0] $end
$upscope $end
$scope module cpu $end
$var reg 8 + \Rx[7] [7:0] $end
$upscope $end
$enddefinitions $end
#100000
$dumpvars
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b1 $
b1 #
b1000000000001 "
0!
$end
#110000
b1000100010010 "
#150000
b10 #
1!
#160000
b10 %
#200000
0!
#210000
b11001000000001 "
#250000
b11 #
1!
#260000
b11 &
#300000
0!
#310000
b10001100010010 "
#350000
b10 #
1!
#360000
b10 '
#400000
0!
#410000
b101000000000000 "
#450000
1!
#500000
0!
#510000
b1001000000000000 "
#550000
1!
